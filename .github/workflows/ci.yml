name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Run tests with pytest
        run: |
          python -m pytest tests/ -v --cov=wyrdbound_dice --cov-report=term

      - name: Test package installation and basic functionality
        run: |
          python -c "
          from wyrdbound_dice import roll
          result = roll('2d6+3')
          print(f'Test roll result: {result.total}')
          assert 5 <= result.total <= 15
          print('✓ Basic functionality test passed')
          "

  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Check code formatting with Black
        run: |
          black --check --diff src/ tests/ tools/

      - name: Check import sorting with isort
        run: |
          isort --check-only --diff src/ tests/ tools/

      - name: Lint with flake8
        run: |
          flake8 src/ tests/ tools/

  cli-tools:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install package with visualization dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[visualization]"

      - name: Test CLI tools
        run: |
          echo "Testing roll tool..."
          python tools/roll.py "2d6"
          python tools/roll.py "3d8+2"
          python tools/roll.py "1d20"
          echo "✓ Roll tool works"

          echo "Testing graph tool..."
          # Test that graph tool shows help (basic functionality)
          python tools/graph.py --help > /dev/null
          echo "✓ Graph tool help works"

          # Test actual graph generation
          python tools/graph.py "2d6" -o test_output.html -n 100
          if [ -f test_output.html ]; then
            echo "✓ Graph tool works - output file created"
          else
            echo "❌ Graph tool failed - no output file"
            exit 1
          fi
